{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1","program":"C:\\Users\\nsedler\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","rusttype","C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"crossbeam-deque\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"gpu_cache\"","--cfg","feature=\"has-atomics\"","--cfg","feature=\"linked-hash-map\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"rustc-hash\"","--cfg","feature=\"std\"","-C","metadata=aeb18ece72c70970","-C","extra-filename=-aeb18ece72c70970","--out-dir","c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps","--extern","approx=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\libapprox-7ec0fa1c86fb21b3.rmeta","--extern","arrayvec=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\libarrayvec-49a76dac5f3477c2.rmeta","--extern","crossbeam_deque=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\libcrossbeam_deque-5cd10564bfb62224.rmeta","--extern","crossbeam_utils=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\libcrossbeam_utils-59e8eec75a6ddf53.rmeta","--extern","linked_hash_map=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\liblinked_hash_map-c7bcbbb2d9c6663e.rmeta","--extern","num_cpus=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\libnum_cpus-8a10c894e1f67bd3.rmeta","--extern","ordered_float=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\libordered_float-420f5b21421325cd.rmeta","--extern","rustc_hash=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\librustc_hash-7e06c2e5c54855ce.rmeta","--extern","stb_truetype=c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\libstb_truetype-3bc7cf32e6e6fca9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\nsedler\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\nsedler\\Documents\\rust\\SmoothMovement\\target\\rls\\debug\\deps\\librusttype-aeb18ece72c70970.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[15875246687155246100,10578269931815494621]},"crate_root":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src","external_crates":[{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9427977260301951124,12109955124372957148]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","num":2,"id":{"name":"core","disambiguator":[3215774421958443461,317753073875096730]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17224083688818874547,9559482936290031731]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18091163727436317975,11782788917893645886]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16923134524453488966,338877121959128963]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[15556092502619809596,16433112589117741866]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8626296931894420134,1165415804249109730]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8665569488257896457,16725777632752238541]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8306516236845206973,10531989379467649303]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17140567284527794716,6707285123185935984]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[2371002302899812892,10236220743892507345]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7397349612947417879,16190381825946466186]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9949890438130053664,8357565210831989746]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","num":14,"id":{"name":"approx","disambiguator":[12843994771273905860,1572045047522591377]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","num":15,"id":{"name":"num_traits","disambiguator":[1403235899273432154,9763978540929028751]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","num":16,"id":{"name":"ordered_float","disambiguator":[15643834420924939498,6060306300583792443]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","num":17,"id":{"name":"arrayvec","disambiguator":[11469465751827230329,10161033445285160568]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":18,"id":{"name":"linked_hash_map","disambiguator":[6005946705816498651,224907840537136597]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":19,"id":{"name":"rustc_hash","disambiguator":[14546494227606646725,15238569104854551645]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":20,"id":{"name":"byteorder","disambiguator":[8478815861175284378,10915889910364645727]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":21,"id":{"name":"crossbeam_deque","disambiguator":[15798804632993984432,12222785833458398821]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":22,"id":{"name":"crossbeam_epoch","disambiguator":[7165111686121535203,4965344123658032318]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":23,"id":{"name":"cfg_if","disambiguator":[7097893830635358156,2561238597152415025]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":24,"id":{"name":"arrayvec","disambiguator":[5676320347006272932,15270772726700427209]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":25,"id":{"name":"nodrop","disambiguator":[5856811911952841538,14910796201668882496]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":26,"id":{"name":"crossbeam_utils","disambiguator":[17827728437984844576,2357257837309280382]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":27,"id":{"name":"lazy_static","disambiguator":[3734739188166753530,17797314516045504376]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":28,"id":{"name":"memoffset","disambiguator":[5935212011542948581,9858521018669074070]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":29,"id":{"name":"scopeguard","disambiguator":[4274693666549227886,1833606749797590363]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","num":30,"id":{"name":"stb_truetype","disambiguator":[6238062891464780716,3198141249316965067]}},{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","num":31,"id":{"name":"num_cpus","disambiguator":[5177374475273831577,8468519787978471712]}}],"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":0,"byte_end":42405,"line_start":1,"line_end":1109,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5194,"byte_end":5199,"line_start":106,"line_end":106,"column_start":27,"column_end":32},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5201,"byte_end":5207,"line_start":106,"line_end":106,"column_start":34,"column_end":40},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5209,"byte_end":5214,"line_start":106,"line_end":106,"column_start":42,"column_end":47},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5216,"byte_end":5220,"line_start":106,"line_end":106,"column_start":49,"column_end":53},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5222,"byte_end":5227,"line_start":106,"line_end":106,"column_start":55,"column_end":60},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5229,"byte_end":5233,"line_start":106,"line_end":106,"column_start":62,"column_end":66},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5235,"byte_end":5241,"line_start":106,"line_end":106,"column_start":68,"column_end":74},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":0,"byte_end":42405,"line_start":1,"line_end":1109,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":97},{"krate":0,"index":149},{"krate":0,"index":258},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":695},{"krate":0,"index":702},{"krate":0,"index":699},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":270},{"krate":0,"index":711},{"krate":0,"index":722},{"krate":0,"index":719},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":725},{"krate":0,"index":748},{"krate":0,"index":746},{"krate":0,"index":744},{"krate":0,"index":741},{"krate":0,"index":739},{"krate":0,"index":736},{"krate":0,"index":730},{"krate":0,"index":728},{"krate":0,"index":749},{"krate":0,"index":772},{"krate":0,"index":770},{"krate":0,"index":768},{"krate":0,"index":765},{"krate":0,"index":763},{"krate":0,"index":760},{"krate":0,"index":754},{"krate":0,"index":752},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":289},{"krate":0,"index":779},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":819},{"krate":0,"index":817},{"krate":0,"index":815},{"krate":0,"index":812},{"krate":0,"index":802},{"krate":0,"index":820},{"krate":0,"index":845},{"krate":0,"index":843},{"krate":0,"index":841},{"krate":0,"index":838},{"krate":0,"index":824},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":846},{"krate":0,"index":851},{"krate":0,"index":296},{"krate":0,"index":854},{"krate":0,"index":859},{"krate":0,"index":298},{"krate":0,"index":862},{"krate":0,"index":882},{"krate":0,"index":880},{"krate":0,"index":877},{"krate":0,"index":867},{"krate":0,"index":865},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":325},{"krate":0,"index":883},{"krate":0,"index":889},{"krate":0,"index":344},{"krate":0,"index":894},{"krate":0,"index":903},{"krate":0,"index":351},{"krate":0,"index":357},{"krate":0,"index":907},{"krate":0,"index":918},{"krate":0,"index":916},{"krate":0,"index":914},{"krate":0,"index":919},{"krate":0,"index":923},{"krate":0,"index":921},{"krate":0,"index":366},{"krate":0,"index":387},{"krate":0,"index":925},{"krate":0,"index":934},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: doc_markdown, clippy ::\n        cast_lossless, clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":4887,"byte_end":5021,"line_start":90,"line_end":95,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43179,"byte_end":43184,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43198,"byte_end":43199,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43212,"byte_end":43213,"line_start":23,"line_end":23,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43536,"byte_end":43542,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43556,"byte_end":43557,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43570,"byte_end":43571,"line_start":34,"line_end":34,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43647,"byte_end":43652,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"fn <N> (x: N, y: N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43630,"byte_end":43639,"line_start":37,"line_end":37,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43773,"byte_end":43779,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"fn <N> (x: N, y: N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43756,"byte_end":43765,"line_start":42,"line_end":42,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46445,"byte_end":46449,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":486}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46460,"byte_end":46461,"line_start":148,"line_end":148,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46645,"byte_end":46650,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":504}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control\n point `p[1]`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46661,"byte_end":46662,"line_start":154,"line_end":154,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46848,"byte_end":46852,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at\n `max`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46866,"byte_end":46869,"line_start":160,"line_end":160,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46889,"byte_end":46892,"line_start":161,"line_end":161,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46964,"byte_end":46969,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":47033,"byte_end":47039,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":52449,"byte_end":52457,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item = Self>;","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":52491,"byte_end":52494,"line_start":11,"line_end":11,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item = Self::PerSlice>;","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpu_cache","qualname":"::gpu_cache","value":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":592},{"krate":0,"index":609},{"krate":0,"index":607},{"krate":0,"index":605},{"krate":0,"index":602},{"krate":0,"index":600},{"krate":0,"index":597},{"krate":0,"index":610},{"krate":0,"index":621},{"krate":0,"index":619},{"krate":0,"index":616},{"krate":0,"index":614},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":623},{"krate":0,"index":632},{"krate":0,"index":630},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":634},{"krate":0,"index":652},{"krate":0,"index":650},{"krate":0,"index":648},{"krate":0,"index":646},{"krate":0,"index":644},{"krate":0,"index":641},{"krate":0,"index":639},{"krate":0,"index":637},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":653},{"krate":0,"index":673},{"krate":0,"index":671},{"krate":0,"index":669},{"krate":0,"index":667},{"krate":0,"index":665},{"krate":0,"index":662},{"krate":0,"index":660},{"krate":0,"index":658},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":674},{"krate":0,"index":694},{"krate":0,"index":692},{"krate":0,"index":690},{"krate":0,"index":688},{"krate":0,"index":686},{"krate":0,"index":683},{"krate":0,"index":681},{"krate":0,"index":679},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":255}],"decl_id":null,"docs":" This module provides capabilities for managing a cache of rendered glyphs in\n GPU memory, with the goal of minimisng the size and frequency of glyph\n uploads to GPU memory from the CPU.","sig":null,"attributes":[{"value":"cfg(feature = \"gpu_cache\")","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5118,"byte_end":5147,"line_start":103,"line_end":103,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":69770,"byte_end":69783,"line_start":84,"line_end":84,"column_start":10,"column_end":23},"name":"TextureCoords","qualname":"::gpu_cache::TextureCoords","value":"(Rect<f32>, Rect<i32>)","parent":null,"children":[],"decl_id":null,"docs":" Texture coordinates (floating point) of the quad for a glyph in the cache,\n as well as the pixel-space (integer) coordinates that this region should be\n drawn at.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":72646,"byte_end":72651,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"Cache","qualname":"::gpu_cache::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" An implementation of a dynamic GPU glyph cache. See the module documentation\n for more information.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":73809,"byte_end":73821,"line_start":235,"line_end":235,"column_start":12,"column_end":24},"name":"CacheBuilder","qualname":"::gpu_cache::CacheBuilder","value":"CacheBuilder {  }","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"decl_id":null,"docs":" Builder & rebuilder for `Cache`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":74784,"byte_end":74794,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<CacheBuilder>::dimensions","value":"fn (mut self, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `width` & `height` dimensions of the 2D texture that will hold the\n cache contents on the GPU.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":75996,"byte_end":76011,"line_start":298,"line_end":298,"column_start":12,"column_end":27},"name":"scale_tolerance","qualname":"<CacheBuilder>::scale_tolerance","value":"fn <V> (mut self, scale_tolerance: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the tolerances (maximum allowed difference) for judging\n whether an existing glyph in the cache is close enough to the\n requested glyph in scale to be used in its place. Due to floating\n point inaccuracies a min value of `0.001` is enforced.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":77417,"byte_end":77435,"line_start":328,"line_end":328,"column_start":12,"column_end":30},"name":"position_tolerance","qualname":"<CacheBuilder>::position_tolerance","value":"fn <V> (mut self, position_tolerance: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the tolerances (maximum allowed difference) for judging\n whether an existing glyph in the cache is close enough to the requested\n glyph in subpixel offset to be used in its place. Due to floating\n point inaccuracies a min value of `0.001` is enforced.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":78046,"byte_end":78056,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"pad_glyphs","qualname":"<CacheBuilder>::pad_glyphs","value":"fn (mut self, pad_glyphs: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pack glyphs in texture with a padding of a single zero alpha pixel to\n avoid bleeding from interpolated shader texture lookups near edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":78553,"byte_end":78562,"line_start":359,"line_end":359,"column_start":12,"column_end":21},"name":"align_4x4","qualname":"<CacheBuilder>::align_4x4","value":"fn (mut self, align_4x4: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align glyphs in texture to 4x4 texel boundaries.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":79134,"byte_end":79145,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"multithread","qualname":"<CacheBuilder>::multithread","value":"fn (mut self, multithread: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When multiple CPU cores are available spread rasterization work across\n all cores.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":80211,"byte_end":80216,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"build","qualname":"<CacheBuilder>::build","value":"fn <'a> (self) -> Cache<'a>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new cache. Note that this is just the CPU side of the\n cache. The GPU texture is managed by the user.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":81649,"byte_end":81656,"line_start":463,"line_end":463,"column_start":12,"column_end":19},"name":"rebuild","qualname":"<CacheBuilder>::rebuild","value":"fn (self, cache: &mut Cache) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rebuilds a `Cache` with new attributes. All cached glyphs are cleared,\n however the glyph queue is retained unmodified.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":82433,"byte_end":82447,"line_start":488,"line_end":488,"column_start":5,"column_end":19},"name":"GlyphNotCached","qualname":"::gpu_cache::CacheReadErr::GlyphNotCached","value":"CacheReadErr::GlyphNotCached","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" Indicates that the requested glyph is not present in the cache\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":82343,"byte_end":82355,"line_start":486,"line_end":486,"column_start":10,"column_end":22},"name":"CacheReadErr","qualname":"::gpu_cache::CacheReadErr","value":"CacheReadErr::{GlyphNotCached}","parent":null,"children":[{"krate":0,"index":635}],"decl_id":null,"docs":" Returned from `Cache::rect_for`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":83050,"byte_end":83063,"line_start":508,"line_end":508,"column_start":5,"column_end":18},"name":"GlyphTooLarge","qualname":"::gpu_cache::CacheWriteErr::GlyphTooLarge","value":"CacheWriteErr::GlyphTooLarge","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" At least one of the queued glyphs is too big to fit into the cache, even\n if all other glyphs are removed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":83201,"byte_end":83220,"line_start":511,"line_end":511,"column_start":5,"column_end":24},"name":"NoRoomForWholeQueue","qualname":"::gpu_cache::CacheWriteErr::NoRoomForWholeQueue","value":"CacheWriteErr::NoRoomForWholeQueue","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Not all of the requested glyphs can fit into the cache, even if the\n cache is completely cleared before the attempt.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":82908,"byte_end":82921,"line_start":505,"line_end":505,"column_start":10,"column_end":23},"name":"CacheWriteErr","qualname":"::gpu_cache::CacheWriteErr","value":"CacheWriteErr::{GlyphTooLarge, NoRoomForWholeQueue}","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":656}],"decl_id":null,"docs":" Returned from `Cache::cache_queued`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":83992,"byte_end":83998,"line_start":534,"line_end":534,"column_start":5,"column_end":11},"name":"Adding","qualname":"::gpu_cache::CachedBy::Adding","value":"CachedBy::Adding","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Added any additional glyphs into the texture without affecting\n the position of any already cached glyphs in the latest queue.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":84132,"byte_end":84142,"line_start":537,"line_end":537,"column_start":5,"column_end":15},"name":"Reordering","qualname":"::gpu_cache::CachedBy::Reordering","value":"CachedBy::Reordering","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Fit the glyph queue by re-ordering all glyph texture positions.\n Previous texture positions are no longer valid.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":83765,"byte_end":83773,"line_start":529,"line_end":529,"column_start":10,"column_end":18},"name":"CachedBy","qualname":"::gpu_cache::CachedBy","value":"CachedBy::{Adding, Reordering}","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":677}],"decl_id":null,"docs":" Successful method of caching of the queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":84622,"byte_end":84629,"line_start":558,"line_end":558,"column_start":12,"column_end":19},"name":"builder","qualname":"<Cache>::builder","value":"fn () -> CacheBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a default `CacheBuilder`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":84601,"byte_end":84610,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":84759,"byte_end":84774,"line_start":563,"line_end":563,"column_start":12,"column_end":27},"name":"scale_tolerance","qualname":"<Cache>::scale_tolerance","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current scale tolerance for the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":84909,"byte_end":84927,"line_start":568,"line_end":568,"column_start":12,"column_end":30},"name":"position_tolerance","qualname":"<Cache>::position_tolerance","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current subpixel position tolerance for the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":85148,"byte_end":85158,"line_start":574,"line_end":574,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<Cache>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the cache texture dimensions assumed by the cache. For proper\n operation this should match the dimensions of the used GPU texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":85462,"byte_end":85473,"line_start":581,"line_end":581,"column_start":12,"column_end":23},"name":"queue_glyph","qualname":"<Cache>::queue_glyph","value":"fn (&mut self, font_id: usize, glyph: PositionedGlyph<'font>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Queue a glyph for caching by the next call to `cache_queued`. `font_id`\n is used to disambiguate glyphs from different fonts. The user should\n ensure that `font_id` is unique to the font the glyph is from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":85718,"byte_end":85723,"line_start":588,"line_end":588,"column_start":12,"column_end":17},"name":"clear","qualname":"<Cache>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the cache. Does not affect the glyph queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":86045,"byte_end":86056,"line_start":598,"line_end":598,"column_start":12,"column_end":23},"name":"clear_queue","qualname":"<Cache>::clear_queue","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the glyph queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":86179,"byte_end":86189,"line_start":603,"line_end":603,"column_start":12,"column_end":22},"name":"to_builder","qualname":"<Cache>::to_builder","value":"fn (&self) -> CacheBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CacheBuilder` with this cache's attributes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":88205,"byte_end":88217,"line_start":648,"line_end":648,"column_start":12,"column_end":24},"name":"cache_queued","qualname":"<Cache>::cache_queued","value":"fn <F> (&mut self, mut uploader: F) -> Result<CachedBy, CacheWriteErr>","parent":null,"children":[],"decl_id":null,"docs":" Caches the queued glyphs. If this is unsuccessful, the queue is\n untouched. Any glyphs cached by previous calls to this function may be\n removed from the cache to make room for the newly queued glyphs. Thus if\n you want to ensure that a glyph is in the cache, the most recently\n cached queue must have contained that glyph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":101304,"byte_end":101312,"line_start":920,"line_end":920,"column_start":12,"column_end":20},"name":"rect_for","qualname":"<Cache>::rect_for","value":"fn (&self, font_id: usize, glyph: &PositionedGlyph) -> Result<Option<TextureCoords>, CacheReadErr>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the (floating point) texture coordinates of the quad for a\n glyph in the cache, as well as the pixel-space (integer) coordinates\n that this region should be drawn at. These pixel-space coordinates\n assume an origin at the top left of the quad. In the majority of cases\n these pixel-space coordinates should be identical to the bounding box of\n the input glyph. They only differ if the cache has returned a substitute\n glyph that is deemed close enough to the requested glyph as specified by\n the cache tolerance parameters.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5971,"byte_end":5985,"line_start":130,"line_end":130,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the\n collection is not validated. This structure may or may not own the font\n data.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":6703,"byte_end":6707,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":707}],"decl_id":null,"docs":" A single font. This may or may not own the font data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":7425,"byte_end":7430,"line_start":173,"line_end":173,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":7446,"byte_end":7451,"line_start":174,"line_end":174,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<[u8]>)","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":7403,"byte_end":7414,"line_start":172,"line_end":172,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"SharedBytes::{ByRef, ByArc}","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":716}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data\n is either a shared reference to externally owned data, or managed by\n reference counting. `SharedBytes` can be conveniently used with `From` and\n `Into`, and dereferences to the contained bytes.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":9497,"byte_end":9506,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":9786,"byte_end":9793,"line_start":250,"line_end":250,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will\n not necessarily correspond to the correct glyph in a font other than the\n one that it was obtained from.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10208,"byte_end":10213,"line_start":259,"line_end":259,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":775}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the\n font and the glyph id, or it may be a standalone glyph that owns the data\n needed by it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10551,"byte_end":10566,"line_start":276,"line_end":276,"column_start":12,"column_end":27},"name":"SharedGlyphData","qualname":"::SharedGlyphData","value":"SharedGlyphData { id, extents, scale_for_1_pixel, unit_h_metrics, shape }","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10577,"byte_end":10579,"line_start":277,"line_end":277,"column_start":9,"column_end":11},"name":"id","qualname":"::SharedGlyphData::id","value":"u32","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10594,"byte_end":10601,"line_start":278,"line_end":278,"column_start":9,"column_end":16},"name":"extents","qualname":"::SharedGlyphData::extents","value":"std::option::Option<geometry::Rect<i32>>","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10630,"byte_end":10647,"line_start":279,"line_end":279,"column_start":9,"column_end":26},"name":"scale_for_1_pixel","qualname":"::SharedGlyphData::scale_for_1_pixel","value":"f32","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10662,"byte_end":10676,"line_start":280,"line_end":280,"column_start":9,"column_end":23},"name":"unit_h_metrics","qualname":"::SharedGlyphData::unit_h_metrics","value":"HMetrics","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10696,"byte_end":10701,"line_start":281,"line_end":281,"column_start":9,"column_end":14},"name":"shape","qualname":"::SharedGlyphData::shape","value":"std::option::Option<std::vec::Vec<stb_truetype::Vertex>>","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10980,"byte_end":10988,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the\n horizontal offset of a glyph from the previous one in a string when laying a\n string out horizontally.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":11112,"byte_end":11125,"line_start":290,"line_end":290,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from\n the origin of this glyph.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":11253,"byte_end":11270,"line_start":293,"line_end":293,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost\n edge/point of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":11559,"byte_end":11567,"line_start":299,"line_end":299,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for\n calculating the amount of vertical space to give a line of text, and for\n computing the vertical offset between successive lines.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":11690,"byte_end":11696,"line_start":302,"line_end":302,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the\n baseline. Typically positive.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":11822,"byte_end":11829,"line_start":305,"line_end":305,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the\n baseline. Typically negative.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":12003,"byte_end":12011,"line_start":308,"line_end":308,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the\n next. This is of course only a guideline given by the font's designers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":12680,"byte_end":12691,"line_start":336,"line_end":336,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for\n information that depends on the scale of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":13215,"byte_end":13230,"line_start":355,"line_end":355,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query\n such a glyph for information that depends on the scale and position of the\n glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14104,"byte_end":14109,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and\n vertically. A vertical scale of `y` pixels means that the distance betwen\n the ascent and descent lines (see `VMetrics`) of the face will be `y`\n pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling\n by a factor *f* in the horizontal direction is achieved by setting `x` equal\n to *f* times `y`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14157,"byte_end":14158,"line_start":380,"line_end":380,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14208,"byte_end":14209,"line_start":382,"line_end":382,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14320,"byte_end":14327,"line_start":388,"line_end":388,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"fn (s: f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14299,"byte_end":14308,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14693,"byte_end":14704,"line_start":398,"line_end":398,"column_start":11,"column_end":22},"name":"IntoGlyphId","qualname":"::IntoGlyphId","value":"IntoGlyphId","parent":null,"children":[{"krate":0,"index":303}],"decl_id":null,"docs":" A trait for types that can be converted into a `GlyphId`, in the context of\n a specific font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14812,"byte_end":14825,"line_start":401,"line_end":401,"column_start":8,"column_end":21},"name":"into_glyph_id","qualname":"::IntoGlyphId::into_glyph_id","value":"fn (self, _: &Font<'_>) -> GlyphId","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Convert `self` into a `GlyphId`, consulting the index map of `font` if\n necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":15803,"byte_end":15813,"line_start":428,"line_end":428,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection>::from_bytes","value":"fn <B> (bytes: B) -> Result<FontCollection<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded\n from a font file, which may be a single font or a TrueType Collection\n holding a number of fonts. This array may be owned (e.g. `Vec<u8>`), or\n borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for\n some type `T`, `T` can be used as input.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":16855,"byte_end":16864,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection>::into_font","value":"fn (self) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" If this `FontCollection` holds a single font, or a TrueType Collection\n containing only one font, return that as a `Font`. The `FontCollection`\n is consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":17891,"byte_end":17898,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection>::font_at","value":"fn (&self, i: usize) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is\n valid. The produced font borrows the font data that is either borrowed\n or owned by this font collection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":18317,"byte_end":18327,"line_start":478,"line_end":478,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection>::into_fonts","value":"fn (self) -> IntoFontsIter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists\n within the collection.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":18467,"byte_end":18480,"line_start":485,"line_end":485,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":19085,"byte_end":19095,"line_start":503,"line_end":503,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Font>::from_bytes","value":"fn <B> (bytes: B) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font from an array of bytes, this is a shortcut for\n `FontCollection::from_bytes` for collections comprised of a single font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":19411,"byte_end":19420,"line_start":509,"line_end":509,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"fn (&self, scale: Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are\n shared by all of the glyphs in the font. See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":19727,"byte_end":19745,"line_start":517,"line_end":517,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font>::v_metrics_unscaled","value":"fn (&self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":19888,"byte_end":19900,"line_start":522,"line_end":522,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":20111,"byte_end":20122,"line_start":528,"line_end":528,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this\n font will always be in the range `0..self.glyph_count()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":20745,"byte_end":20750,"line_start":542,"line_end":542,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"fn <C> (&self, id: C) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id\n for this font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":21297,"byte_end":21307,"line_start":554,"line_end":554,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"fn <I> (&self, itr: I) -> GlyphIter<'a, '_, I>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":21519,"byte_end":21536,"line_start":561,"line_end":561,"column_start":12,"column_end":29},"name":"font_name_strings","qualname":"<Font>::font_name_strings","value":"fn (&self) -> tt::FontNameIter<'_, SharedBytes<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names for this font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":23720,"byte_end":23726,"line_start":610,"line_end":610,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"fn <'b> (&'b self, s: &'b str, scale: Scale, start: Point<f32>) -> LayoutIter<'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally.\n It does not take control characters like line breaks into account, as\n treatment of these is likely to depend on the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":24123,"byte_end":24135,"line_start":622,"line_end":622,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"fn <A, B> (&self, scale: Scale, first: A, second: B) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics\n for a particular pair of glyphs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":24586,"byte_end":24595,"line_start":635,"line_end":635,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":24944,"byte_end":24954,"line_start":652,"line_end":652,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":26077,"byte_end":26081,"line_start":683,"line_end":683,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":26306,"byte_end":26308,"line_start":690,"line_end":690,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":26624,"byte_end":26630,"line_start":698,"line_end":698,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"fn (self, scale: Scale) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend\n on the scale of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":27643,"byte_end":27653,"line_start":723,"line_end":723,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph>::standalone","value":"fn (&self) -> Glyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that\n owns its resources, extracted from the font. This glyph can outlive the\n font that it comes from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":28840,"byte_end":28848,"line_start":748,"line_end":748,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Glyph>::get_data","value":"fn (&self) -> Option<Arc<SharedGlyphData>>","parent":null,"children":[],"decl_id":null,"docs":" Get the data from this glyph (such as width, extents, vertices, etc.).\n Only possible if the glyph is a shared glyph.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29144,"byte_end":29148,"line_start":758,"line_end":758,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29160,"byte_end":29165,"line_start":759,"line_end":759,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29130,"byte_end":29137,"line_start":757,"line_end":757,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"Segment::{Line, Curve}","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":911}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29269,"byte_end":29276,"line_start":763,"line_end":763,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":920}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29287,"byte_end":29295,"line_start":764,"line_end":764,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29396,"byte_end":29398,"line_start":768,"line_end":768,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29712,"byte_end":29716,"line_start":775,"line_end":775,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29840,"byte_end":29853,"line_start":779,"line_end":779,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"fn (self) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29951,"byte_end":29959,"line_start":783,"line_end":783,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"fn (&self) -> &Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":30149,"byte_end":30159,"line_start":788,"line_end":788,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"fn (self, p: Point<f32>) -> PositionedGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that\n depend on the position of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":30364,"byte_end":30369,"line_start":796,"line_end":796,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":30526,"byte_end":30535,"line_start":801,"line_end":801,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"fn (&self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for\n more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":33200,"byte_end":33205,"line_start":864,"line_end":864,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph.\n Each contour consists of a sequence of segments. Each segment is either\n a straight `Line` or a `Curve`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":33517,"byte_end":33535,"line_start":870,"line_end":870,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"fn (&self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with\n `pixel_bounding_box`, the conservative pixel-boundary bounding box. The\n coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":34441,"byte_end":34451,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph>::standalone","value":"fn (&self) -> ScaledGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":36004,"byte_end":36006,"line_start":929,"line_end":929,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":36321,"byte_end":36325,"line_start":936,"line_end":936,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":36450,"byte_end":36462,"line_start":940,"line_end":940,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"fn (&self) -> &ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":36574,"byte_end":36591,"line_start":944,"line_end":944,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"fn (self) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":36970,"byte_end":36988,"line_start":951,"line_end":951,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"fn (&self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the\n smallest rectangle aligned to pixel boundaries that encloses the shape\n of this glyph at this position. Note that the origin of the glyph, at\n pixel-space coordinates (0, 0), is at the top left of the bounding box.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":37158,"byte_end":37163,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph\n taken into account.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":37263,"byte_end":37268,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":37330,"byte_end":37338,"line_start":962,"line_end":962,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"fn (&self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":38118,"byte_end":38122,"line_start":985,"line_end":985,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"fn <O> (&self, o: O) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by\n `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":39916,"byte_end":39926,"line_start":1032,"line_end":1032,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph>::standalone","value":"fn (&self) -> PositionedGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":40197,"byte_end":40209,"line_start":1041,"line_end":1041,"column_start":12,"column_end":24},"name":"set_position","qualname":"<PositionedGlyph>::set_position","value":"fn (&mut self, p: Point<f32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets positioning information and recalculates the pixel bounding box\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":40911,"byte_end":40929,"line_start":1061,"line_end":1061,"column_start":5,"column_end":23},"name":"UnrecognizedFormat","qualname":"::Error::UnrecognizedFormat","value":"Error::UnrecognizedFormat","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" Font data presented to rusttype is not in a format that the library\n recognizes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":41040,"byte_end":41049,"line_start":1065,"line_end":1065,"column_start":5,"column_end":14},"name":"IllFormed","qualname":"::Error::IllFormed","value":"Error::IllFormed","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" Font data presented to rusttype was ill-formed (lacking necessary\n tables, for example).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":41192,"byte_end":41218,"line_start":1069,"line_end":1069,"column_start":5,"column_end":31},"name":"CollectionIndexOutOfBounds","qualname":"::Error::CollectionIndexOutOfBounds","value":"Error::CollectionIndexOutOfBounds","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" The caller tried to access the `i`'th font from a `FontCollection`, but\n the collection doesn't contain that many fonts.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":41371,"byte_end":41402,"line_start":1073,"line_end":1073,"column_start":5,"column_end":36},"name":"CollectionContainsMultipleFonts","qualname":"::Error::CollectionContainsMultipleFonts","value":"Error::CollectionContainsMultipleFonts","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" The caller tried to convert a `FontCollection` into a font via\n `into_font`, but the `FontCollection` contains more than one font.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":40803,"byte_end":40808,"line_start":1058,"line_end":1058,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{UnrecognizedFormat, IllFormed, CollectionIndexOutOfBounds, CollectionContainsMultipleFonts}","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932}],"decl_id":null,"docs":" The type for errors returned by rusttype.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43876,"byte_end":43881,"line_start":47,"line_end":47,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":44062,"byte_end":44068,"line_start":54,"line_end":54,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":44250,"byte_end":44256,"line_start":61,"line_end":61,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":44418,"byte_end":44424,"line_start":68,"line_end":68,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":44754,"byte_end":44760,"line_start":82,"line_end":82,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":45090,"byte_end":45096,"line_start":96,"line_end":96,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":45426,"byte_end":45432,"line_start":110,"line_end":110,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":45793,"byte_end":45798,"line_start":124,"line_end":124,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":45988,"byte_end":45993,"line_start":131,"line_end":131,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46182,"byte_end":46188,"line_start":138,"line_end":138,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46943,"byte_end":46947,"line_start":163,"line_end":163,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":47458,"byte_end":47462,"line_start":185,"line_end":185,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":47862,"byte_end":47867,"line_start":204,"line_end":204,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":49361,"byte_end":49366,"line_start":250,"line_end":250,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":49827,"byte_end":49831,"line_start":267,"line_end":267,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":50727,"byte_end":50748,"line_start":304,"line_end":304,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":52827,"byte_end":52840,"line_start":27,"line_end":27,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":53992,"byte_end":53996,"line_start":64,"line_end":64,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":54737,"byte_end":54751,"line_start":100,"line_end":100,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":57516,"byte_end":57521,"line_start":178,"line_end":178,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":70706,"byte_end":70717,"line_start":113,"line_end":113,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":71453,"byte_end":71464,"line_start":146,"line_end":146,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":71670,"byte_end":71681,"line_start":155,"line_end":155,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":72302,"byte_end":72306,"line_start":183,"line_end":183,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":73993,"byte_end":74005,"line_start":244,"line_end":244,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":74272,"byte_end":74284,"line_start":257,"line_end":257,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":82473,"byte_end":82485,"line_start":490,"line_end":490,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":82634,"byte_end":82646,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":83246,"byte_end":83259,"line_start":513,"line_end":513,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":83408,"byte_end":83421,"line_start":518,"line_end":518,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":84540,"byte_end":84545,"line_start":555,"line_end":555,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":6778,"byte_end":6782,"line_start":156,"line_end":156,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":7497,"byte_end":7508,"line_start":177,"line_end":177,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":7907,"byte_end":7918,"line_start":192,"line_end":192,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":8263,"byte_end":8274,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":8599,"byte_end":8610,"line_start":215,"line_end":215,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":8922,"byte_end":8933,"line_start":226,"line_end":226,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":9264,"byte_end":9275,"line_start":237,"line_end":237,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10270,"byte_end":10275,"line_start":263,"line_end":263,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":12049,"byte_end":12057,"line_start":311,"line_end":311,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":12283,"byte_end":12291,"line_start":321,"line_end":321,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":12785,"byte_end":12796,"line_start":342,"line_end":342,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":13338,"byte_end":13353,"line_start":361,"line_end":361,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14224,"byte_end":14229,"line_start":385,"line_end":385,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":15031,"byte_end":15040,"line_start":408,"line_end":408,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":15181,"byte_end":15188,"line_start":413,"line_end":413,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":15293,"byte_end":15307,"line_start":419,"line_end":419,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":18570,"byte_end":18583,"line_start":489,"line_end":489,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":18909,"byte_end":18913,"line_start":500,"line_end":500,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":24728,"byte_end":24737,"line_start":642,"line_end":642,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":25140,"byte_end":25150,"line_start":660,"line_end":660,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":25719,"byte_end":25724,"line_start":675,"line_end":675,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29322,"byte_end":29333,"line_start":766,"line_end":766,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":35926,"byte_end":35941,"line_start":927,"line_end":927,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":41412,"byte_end":41417,"line_start":1076,"line_end":1076,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":41948,"byte_end":41953,"line_start":1091,"line_end":1091,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":42144,"byte_end":42149,"line_start":1098,"line_end":1098,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":42292,"byte_end":42297,"line_start":1105,"line_end":1105,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":5156,"byte_end":5165,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":149}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":43876,"byte_end":43881,"line_start":47,"line_end":47,"column_start":44,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1601}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":44062,"byte_end":44068,"line_start":54,"line_end":54,"column_start":44,"column_end":50},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1596}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":44250,"byte_end":44256,"line_start":61,"line_end":61,"column_start":44,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1601}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":44418,"byte_end":44424,"line_start":68,"line_end":68,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":44754,"byte_end":44760,"line_start":82,"line_end":82,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":45090,"byte_end":45096,"line_start":96,"line_end":96,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1611}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":45426,"byte_end":45432,"line_start":110,"line_end":110,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1611}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":45793,"byte_end":45798,"line_start":124,"line_end":124,"column_start":55,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1596}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":45988,"byte_end":45993,"line_start":131,"line_end":131,"column_start":55,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1601}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46182,"byte_end":46188,"line_start":138,"line_end":138,"column_start":54,"column_end":60},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1596}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":46943,"byte_end":46947,"line_start":163,"line_end":163,"column_start":38,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":47458,"byte_end":47462,"line_start":185,"line_end":185,"column_start":27,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":71}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":47862,"byte_end":47867,"line_start":204,"line_end":204,"column_start":27,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":71}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":49145,"byte_end":49150,"line_start":242,"line_end":242,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":49361,"byte_end":49366,"line_start":250,"line_end":250,"column_start":14,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":49827,"byte_end":49831,"line_start":267,"line_end":267,"column_start":14,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\geometry.rs","byte_start":50727,"byte_end":50748,"line_start":304,"line_end":304,"column_start":6,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":52432,"byte_end":52437,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":102}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":52827,"byte_end":52840,"line_start":27,"line_end":27,"column_start":19,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":53992,"byte_end":53996,"line_start":64,"line_end":64,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":102}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":54737,"byte_end":54751,"line_start":100,"line_end":100,"column_start":19,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\rasterizer.rs","byte_start":57516,"byte_end":57521,"line_start":178,"line_end":178,"column_start":18,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":102}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":70706,"byte_end":70717,"line_start":113,"line_end":113,"column_start":6,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":71453,"byte_end":71464,"line_start":146,"line_end":146,"column_start":42,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":71670,"byte_end":71681,"line_start":155,"line_end":155,"column_start":45,"column_end":56},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":72302,"byte_end":72306,"line_start":183,"line_end":183,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":189}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":73993,"byte_end":74005,"line_start":244,"line_end":244,"column_start":18,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":623},"to":{"krate":2,"index":2189}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":74272,"byte_end":74284,"line_start":257,"line_end":257,"column_start":6,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":82473,"byte_end":82485,"line_start":490,"line_end":490,"column_start":23,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":7197}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":82634,"byte_end":82646,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":634},"to":{"krate":1,"index":1559}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":83246,"byte_end":83259,"line_start":513,"line_end":513,"column_start":23,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":653},"to":{"krate":2,"index":7197}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":83408,"byte_end":83421,"line_start":518,"line_end":518,"column_start":23,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":1559}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\gpu_cache.rs","byte_start":84540,"byte_end":84545,"line_start":555,"line_end":555,"column_start":13,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":6778,"byte_end":6782,"line_start":156,"line_end":156,"column_start":21,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":7497,"byte_end":7508,"line_start":177,"line_end":177,"column_start":31,"column_end":42},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":7907,"byte_end":7918,"line_start":192,"line_end":192,"column_start":29,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":8263,"byte_end":8274,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":8599,"byte_end":8610,"line_start":215,"line_end":215,"column_start":26,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":8922,"byte_end":8933,"line_start":226,"line_end":226,"column_start":24,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":9264,"byte_end":9275,"line_start":237,"line_end":237,"column_start":42,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":711},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":10270,"byte_end":10275,"line_start":263,"line_end":263,"column_start":21,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":773},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":12049,"byte_end":12057,"line_start":311,"line_end":311,"column_start":29,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":12283,"byte_end":12291,"line_start":321,"line_end":321,"column_start":30,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":12785,"byte_end":12796,"line_start":342,"line_end":342,"column_start":21,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":13338,"byte_end":13353,"line_start":361,"line_end":361,"column_start":21,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":14224,"byte_end":14229,"line_start":385,"line_end":385,"column_start":6,"column_end":11},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":15031,"byte_end":15040,"line_start":408,"line_end":408,"column_start":22,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":725},"to":{"krate":0,"index":302}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":15181,"byte_end":15188,"line_start":413,"line_end":413,"column_start":22,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":749},"to":{"krate":0,"index":302}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":15293,"byte_end":15307,"line_start":419,"line_end":419,"column_start":10,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":18570,"byte_end":18583,"line_start":489,"line_end":489,"column_start":23,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":317},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":18909,"byte_end":18913,"line_start":500,"line_end":500,"column_start":10,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":24728,"byte_end":24737,"line_start":642,"line_end":642,"column_start":40,"column_end":49},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":883},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":25140,"byte_end":25150,"line_start":660,"line_end":660,"column_start":27,"column_end":37},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":25719,"byte_end":25724,"line_start":675,"line_end":675,"column_start":10,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":29322,"byte_end":29333,"line_start":766,"line_end":766,"column_start":10,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":35926,"byte_end":35941,"line_start":927,"line_end":927,"column_start":10,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":41412,"byte_end":41417,"line_start":1076,"line_end":1076,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":41948,"byte_end":41953,"line_start":1091,"line_end":1091,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":925},"to":{"krate":2,"index":7197}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":42144,"byte_end":42149,"line_start":1098,"line_end":1098,"column_start":28,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":925},"to":{"krate":1,"index":1559}},{"span":{"file_name":"C:\\Users\\nsedler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.1\\src\\lib.rs","byte_start":42292,"byte_end":42297,"line_start":1105,"line_end":1105,"column_start":45,"column_end":50},"kind":{"Impl":{"id":62}},"from":{"krate":1,"index":2409},"to":{"krate":2,"index":2206}}]}